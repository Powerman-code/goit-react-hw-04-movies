{"version":3,"sources":["views/FilmGalleryView/FilmGalleryView.js","views/FilmGalleryView/FilmGalleryView.module.css","SearchBar/SearchBar.module.css","SearchBar/SearchBar.js","views/MoviesPage/MoviesPage.js"],"names":["FilmGalleryView","movies","location","useRouteMatch","url","useLocation","console","log","className","s","list","map","movie","item","to","pathname","id","state","from","link","image","src","POSTER_URL","poster_path","alt","title","width","height","name","movieTitle","original_title","module","exports","Searchbar","onSubmit","useState","inputValue","setInputValue","reset","searchbar","searchForm","event","preventDefault","trim","alert","searchFormButton","type","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","MoviesPage","setName","setMovies","useEffect","fetchMoviesByName","then","results","gallery"],"mappings":"6NAIe,SAASA,EAAT,GAAsC,IAAXC,EAAU,EAAVA,OAElCC,GADUC,cAARC,IACSC,eAIjB,OADAC,QAAQC,IAAIN,GAEV,mCACGA,GACC,oBAAIO,UAAWC,IAAEC,KAAjB,SACGT,EAAOU,KAAI,SAAAC,GAAK,OACf,oBAAmBJ,UAAWC,IAAEI,KAAhC,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYH,EAAMI,IAC1BC,MAAO,CAAEC,KAAMhB,IAEjBM,UAAWC,IAAEU,KALf,UAOE,qBACEX,UAAWC,IAAEW,MACbC,IAAKC,IAAaV,EAAMW,YACxBC,IAAKZ,EAAMa,MACXC,MAAM,MACNC,OAAO,QAERf,EAAMgB,MACL,oBAAGpB,UAAWC,IAAEoB,WAAhB,+DAAuCjB,EAAMgB,QAE9ChB,EAAMa,OACL,oBAAGjB,UAAWC,IAAEoB,WAAhB,+DAAuCjB,EAAMa,SAE9Cb,EAAMkB,gBACL,oBAAGtB,UAAWC,IAAEoB,WAAhB,wIAC0BjB,EAAMkB,sBAvB7BlB,EAAMI,a,mBCd3Be,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,8BAA8B,MAAQ,+BAA+B,WAAa,sC,wCCArLD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,2JCGjO,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAAY,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkBxCC,EAAQ,WACZD,EAAc,KAGhB,OACE,wBAAQ7B,UAAWC,IAAE8B,UAArB,SACE,uBAAM/B,UAAWC,IAAE+B,WAAYN,SAjBd,SAAAO,GACnBA,EAAMC,iBACoB,KAAtBN,EAAWO,QAIfT,EAASE,GACT9B,QAAQC,IAAI6B,GACZE,KALEM,MAAM,uLAcN,UACE,wBAAQpC,UAAWC,IAAEoC,iBAAkBC,KAAK,SAA5C,SACE,sBAAMtC,UAAWC,IAAEsC,sBAAnB,sBAGF,uBACEvC,UAAWC,IAAEuC,gBACbF,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,0BACZC,MAAOhB,EACPiB,SAjCkB,SAAAZ,GACxBJ,EAAcI,EAAMa,OAAOF,MAAMG,uBCAtB,SAASC,IAAc,IAAD,EACXrB,mBAAS,IADE,mBAC5BP,EAD4B,KACtB6B,EADsB,OAEPtB,mBAAS,IAFF,mBAE5BlC,EAF4B,KAEpByD,EAFoB,KAenC,OAPAC,qBAAU,WACK,KAAT/B,GAGJgC,YAAkBhC,GAAMiC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAUI,QACvD,CAAClC,IAGF,qCACE,cAAC,EAAD,CAAWM,SAbE,SAAAN,GACf6B,EAAQ7B,MA8BL3B,GAAU,cAACD,EAAA,EAAD,CAAiBQ,UAAWC,IAAEsD,QAAS9D,OAAQA","file":"static/js/MoviesPage.dc20aeb8.chunk.js","sourcesContent":["import { Link, useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport s from './FilmGalleryView.module.css';\nimport { POSTER_URL } from '../../services/movies-api';\n\nexport default function FilmGalleryView({ movies }) {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  // console.log(url);\n  console.log(movies);\n  return (\n    <>\n      {movies && (\n        <ul className={s.list}>\n          {movies.map(movie => (\n            <li key={movie.id} className={s.item}>\n              <Link\n                to={{\n                  pathname: `movies/${movie.id}`,\n                  state: { from: location },\n                }}\n                className={s.link}\n              >\n                <img\n                  className={s.image}\n                  src={POSTER_URL + movie.poster_path}\n                  alt={movie.title}\n                  width=\"300\"\n                  height=\"450\"\n                />\n                {movie.name && (\n                  <p className={s.movieTitle}>Название: {movie.name}</p>\n                )}\n                {movie.title && (\n                  <p className={s.movieTitle}>Название: {movie.title}</p>\n                )}\n                {movie.original_title && (\n                  <p className={s.movieTitle}>\n                    Оригинальное название: {movie.original_title}\n                  </p>\n                )}\n              </Link>\n              {/* <Link to={`movies/${movie.id}`} className={s.link}>\n                {movie.original_title}\n              </Link> */}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FilmGalleryView_list__3IKjP\",\"item\":\"FilmGalleryView_item__1JzGI\",\"link\":\"FilmGalleryView_link__1-0JG\",\"image\":\"FilmGalleryView_image__2M80R\",\"movieTitle\":\"FilmGalleryView_movieTitle__2ER8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__ea0rx\",\"searchForm\":\"SearchBar_searchForm__2eOfz\",\"searchFormButton\":\"SearchBar_searchFormButton__3N2h7\",\"searchFormButtonLabel\":\"SearchBar_searchFormButtonLabel__3rbTU\",\"searchFormInput\":\"SearchBar_searchFormInput__2GlKi\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './SearchBar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputValue.trim() === '') {\n      alert('Введите ключевое слово для поиска');\n      return;\n    }\n    onSubmit(inputValue);\n    console.log(inputValue);\n    reset();\n  };\n\n  const reset = () => {\n    setInputValue('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <button className={s.searchFormButton} type=\"submit\">\n          <span className={s.searchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Please enter movie name\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { fetchMoviesByName } from '../../services/movies-api';\nimport FilmGalleryView from '../FilmGalleryView/FilmGalleryView';\nimport PropTypes from 'prop-types';\nimport s from './MoviesPage.module.css';\nimport SearchBar from '../../SearchBar/SearchBar';\n\nexport default function MoviesPage() {\n  const [name, setName] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const onSubmit = name => {\n    setName(name);\n  };\n\n  useEffect(() => {\n    if (name === '') {\n      return;\n    }\n    fetchMoviesByName(name).then(({ results }) => setMovies(results));\n  }, [name]);\n\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      {/* <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button className={s.SearchFormButton} type=\"submit\">\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"on\"\n            autoFocus\n            placeholder=\"Please enter movie name\"\n            value={name}\n            onChange={handleInputChange}\n          />\n        </form>\n      </header> */}\n      {movies && <FilmGalleryView className={s.gallery} movies={movies} />}\n    </>\n  );\n}\n"],"sourceRoot":""}