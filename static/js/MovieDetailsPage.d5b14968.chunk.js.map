{"version":3,"sources":["views/FilmErrorView/FilmErrorView.js","views/FilmErrorView/FilmErrorView.module.css","views/MovieDetailsPage/MovieDetailsPage.module.css","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["FilmErrorView","message","console","log","className","s","module","exports","Reviews","lazy","Cast","Status","MoviesDetailsPage","useRouteMatch","url","path","location","useLocation","history","useHistory","movieId","useParams","useState","movie","setMovie","error","setError","status","setStatus","genres","setGenres","useEffect","fetchMovieById","then","catch","type","onClick","push","state","from","button","buttonLabel","card","image","src","POSTER_URL","poster_path","alt","title","width","height","lassName","info","name","original_title","subtitle","vote_average","release_date","overview","list","map","genre","item","id","to","link","activeClassName","activeLink","fallback"],"mappings":"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","file":"static/js/MovieDetailsPage.d5b14968.chunk.js","sourcesContent":["import s from './FilmErrorView.module.css';\nexport default function FilmErrorView({ message }) {\n  console.log(message);\n  return <h1 className={s.message}>{message}</h1>;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"FilmErrorView_message__3f_h2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieDetailsPage_card__13K25\",\"image\":\"MovieDetailsPage_image__s4ofL\",\"title\":\"MovieDetailsPage_title__TDeLC\",\"subtitle\":\"MovieDetailsPage_subtitle__k_Zbg\",\"info\":\"MovieDetailsPage_info__Z4-jN\",\"nav\":\"MovieDetailsPage_nav__2KYgr\",\"link\":\"MovieDetailsPage_link__1dX9h\",\"activeLink\":\"MovieDetailsPage_activeLink__1qMYi MovieDetailsPage_link__1dX9h\",\"list\":\"MovieDetailsPage_list__wQCoP\",\"item\":\"MovieDetailsPage_item__2uID4\",\"button\":\"MovieDetailsPage_button__3Y0CH\",\"buttonLabel\":\"MovieDetailsPage_buttonLabel__14MIQ\"};","import { useState, useEffect, Suspense, lazy } from 'react';\nimport {\n  Route,\n  useParams,\n  useRouteMatch,\n  NavLink,\n  Switch,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\nimport { fetchMovieById, POSTER_URL } from '../../services/movies-api';\nimport FilmPendingView from '../FilmPendingView/FilmPendingView';\nimport FilmErrorView from '../FilmErrorView/FilmErrorView';\nimport s from './MovieDetailsPage.module.css';\n\n// import Reviews from '../Reviews/Reviews';\n// import Cast from '../Cast/Cast';\n\nconst Reviews = lazy(() =>\n  import('../Reviews/Reviews' /*webpackChunkName: \"Reviews\" */),\n);\nconst Cast = lazy(() => import('../Cast/Cast' /*webpackChunkName: \"Cast\" */));\n\nconst Status = {\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nexport default function MoviesDetailsPage() {\n  const { url, path } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  // console.log(url);\n  // console.log(`${url}/reviews`);\n  // console.log(path);\n  // console.log(`${path}:movieId/reviews`);\n\n  // const params = useParams();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.PENDING);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    // setStatus(Status.PENDING);\n    fetchMovieById(movieId)\n      .then(movie => {\n        // console.log(data);\n        setMovie(movie);\n        setStatus(Status.RESOLVED);\n        setGenres(movie.genres);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? '/movies');\n    // history.push(location.state.from);\n  };\n\n  // console.log(movie);\n  // console.log(genres);\n  if (status === Status.PENDING) {\n    return <FilmPendingView />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <FilmErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <div>\n        <button type=\"button\" onClick={onGoBack} className={s.button}>\n          <span className={s.buttonLabel}>Go Back</span>\n        </button>\n        {movie && (\n          <div className={s.card}>\n            <div>\n              <img\n                className={s.image}\n                src={POSTER_URL + movie.poster_path}\n                alt={movie.title}\n                width=\"300\"\n                height=\"450\"\n              />\n            </div>\n            <div lassName={s.info}>\n              {movie.name && <p className={s.title}>Название: {movie.name}</p>}\n              {movie.title && (\n                <p className={s.title}>Название: {movie.title}</p>\n              )}\n              {movie.original_title && (\n                <p className={s.title}>\n                  Оригинальное название: {movie.original_title}\n                </p>\n              )}\n              <p className={s.subtitle}>User Score: {movie.vote_average}</p>\n              <p className={s.subtitle}>Release date: {movie.release_date}</p>\n              <p className={s.subtitle}>Overwiew: {movie.overview}</p>\n              <ul className={s.list}>\n                Genres:\n                {genres &&\n                  genres.map(genre => (\n                    <li key={genre.id} className={s.item}>\n                      {genre.name}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n        )}\n        <nav>\n          <NavLink\n            to={`${url}/cast`}\n            className={s.link}\n            activeClassName={s.activeLink}\n          >\n            Cast\n          </NavLink>\n\n          <NavLink\n            to={`${url}/reviews`}\n            className={s.link}\n            activeClassName={s.activeLink}\n          >\n            Reviews\n          </NavLink>\n        </nav>\n        <Suspense fallback={<FilmPendingView />}>\n          <Switch>\n            <Route path={`${path}/cast`}>\n              <Cast movieId={movieId} />\n            </Route>\n            <Route\n              // path=\"movies/:movieId/reviews\"\n              path={`${path}/reviews`}\n            >\n              <Reviews movieId={movieId} />\n            </Route>\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}